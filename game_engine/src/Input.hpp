#ifndef Input_hpp
#define Input_hpp

#include <stdio.h>
#include <vector>
#include <string>
#include <unordered_map>

#include "glm/glm.hpp"
#include "SDL2/SDL.h"

enum InputState {
    InputState_UP,
    InputState_PRESS,
    InputState_DOWN,
    InputState_LIFT
};

class Input {
public:
    static void init();

    static bool GetKey(std::string key);
    static bool GetKeyDown(std::string key);
    static bool GetKeyUp(std::string key);

    static glm::vec2 GetMousePosition();

    static bool GetMouseButton(int button);
    static bool GetMouseButtonDown(int button);
    static bool GetMouseButtonUp(int button);
    static float GetMouseScrollDelta();
    
    static void process_event(const SDL_Event &e);
    static void update_frame_end();

private:
    static inline std::unordered_map<SDL_Scancode,  InputState> states;
    static inline std::vector<SDL_Scancode> pressed_this_frame;
    static inline std::vector<SDL_Scancode> lifted_this_frame;

    static inline glm::vec2 mouse_position;
    static inline std::unordered_map<int, InputState>  mouse_button_states;
    static inline std::vector<int> clicked_this_frame;
    static inline std::vector<int> declicked_this_frame;

    static inline float mouse_scroll = 0.0f;

    //self.keys_to_check = {"up", "down", "right", "left",
    // "escape", "lshift", "rshift", "lctrl", "rctrl", "lalt", "ralt",
    // "tab", "return", "enter", "escape", "backspace", "delete", 
    // "insert", "space", 
    // "a", "b", "c", "d", 
    // "e", "f", "g", "h", 
    // "i", "j", "k", "l", 
    // "m", "n", "o", "p", 
    // "q", "r", "s", "t", 
    // "u", "v", "w", "x", 
    // "y", "z", "0", "1", 
    // "2", "3", "4", "5", 
    // "6", "7", "8", "9", 
    // "/", ";", "=", "-", 
    // ".", ",", "[", "]", 
    // "'", "\"" }
  
    // thanks chat ^w^
    static inline std::unordered_map<std::string, SDL_Scancode> string_to_scancode = {
    {"a", SDL_SCANCODE_A},
    {"b", SDL_SCANCODE_B},
    {"c", SDL_SCANCODE_C},
    {"d", SDL_SCANCODE_D},
    {"e", SDL_SCANCODE_E},
    {"f", SDL_SCANCODE_F},
    {"g", SDL_SCANCODE_G},
    {"h", SDL_SCANCODE_H},
    {"i", SDL_SCANCODE_I},
    {"j", SDL_SCANCODE_J},
    {"k", SDL_SCANCODE_K},
    {"l", SDL_SCANCODE_L},
    {"m", SDL_SCANCODE_M},
    {"n", SDL_SCANCODE_N},
    {"o", SDL_SCANCODE_O},
    {"p", SDL_SCANCODE_P},
    {"q", SDL_SCANCODE_Q},
    {"r", SDL_SCANCODE_R},
    {"s", SDL_SCANCODE_S},
    {"t", SDL_SCANCODE_T},
    {"u", SDL_SCANCODE_U},
    {"v", SDL_SCANCODE_V},
    {"w", SDL_SCANCODE_W},
    {"x", SDL_SCANCODE_X},
    {"y", SDL_SCANCODE_Y},
    {"z", SDL_SCANCODE_Z},
    {"0", SDL_SCANCODE_0},
    {"1", SDL_SCANCODE_1},
    {"2", SDL_SCANCODE_2},
    {"3", SDL_SCANCODE_3},
    {"4", SDL_SCANCODE_4},
    {"5", SDL_SCANCODE_5},
    {"6", SDL_SCANCODE_6},
    {"7", SDL_SCANCODE_7},
    {"8", SDL_SCANCODE_8},
    {"9", SDL_SCANCODE_9},
    {"return", SDL_SCANCODE_RETURN},
    {"enter", SDL_SCANCODE_RETURN},
    {"escape", SDL_SCANCODE_ESCAPE},
    {"backspace", SDL_SCANCODE_BACKSPACE},
    {"tab", SDL_SCANCODE_TAB},
    {"space", SDL_SCANCODE_SPACE},
    {"-", SDL_SCANCODE_MINUS},
    {"=", SDL_SCANCODE_EQUALS},
    {"[", SDL_SCANCODE_LEFTBRACKET},
    {"]", SDL_SCANCODE_RIGHTBRACKET},
    {"\\", SDL_SCANCODE_BACKSLASH},
    {"nonushash", SDL_SCANCODE_NONUSHASH},
    {";", SDL_SCANCODE_SEMICOLON},
    {"'", SDL_SCANCODE_APOSTROPHE},
    {"`", SDL_SCANCODE_GRAVE},
    {",", SDL_SCANCODE_COMMA},
    {".", SDL_SCANCODE_PERIOD},
    {"/", SDL_SCANCODE_SLASH},
    {"capslock", SDL_SCANCODE_CAPSLOCK},
    {"f1", SDL_SCANCODE_F1},
    {"f2", SDL_SCANCODE_F2},
    {"f3", SDL_SCANCODE_F3},
    {"f4", SDL_SCANCODE_F4},
    {"f5", SDL_SCANCODE_F5},
    {"f6", SDL_SCANCODE_F6},
    {"f7", SDL_SCANCODE_F7},
    {"f8", SDL_SCANCODE_F8},
    {"f9", SDL_SCANCODE_F9},
    {"f10", SDL_SCANCODE_F10},
    {"f11", SDL_SCANCODE_F11},
    {"f12", SDL_SCANCODE_F12},
    {"printscreen", SDL_SCANCODE_PRINTSCREEN},
    {"scrolllock", SDL_SCANCODE_SCROLLLOCK},
    {"pause", SDL_SCANCODE_PAUSE},
    {"insert", SDL_SCANCODE_INSERT},
    {"home", SDL_SCANCODE_HOME},
    {"pageup", SDL_SCANCODE_PAGEUP},
    {"delete", SDL_SCANCODE_DELETE},
    {"end", SDL_SCANCODE_END},
    {"pagedown", SDL_SCANCODE_PAGEDOWN},
    {"right", SDL_SCANCODE_RIGHT},
    {"left", SDL_SCANCODE_LEFT},
    {"down", SDL_SCANCODE_DOWN},
    {"up", SDL_SCANCODE_UP},
    {"numlockclear", SDL_SCANCODE_NUMLOCKCLEAR},
    {"kp_divide", SDL_SCANCODE_KP_DIVIDE},
    {"kp_multiply", SDL_SCANCODE_KP_MULTIPLY},
    {"kp_minus", SDL_SCANCODE_KP_MINUS},
    {"kp_plus", SDL_SCANCODE_KP_PLUS},
    {"kp_enter", SDL_SCANCODE_KP_ENTER},
    {"kp_1", SDL_SCANCODE_KP_1},
    {"kp_2", SDL_SCANCODE_KP_2},
    {"kp_3", SDL_SCANCODE_KP_3},
    {"kp_4", SDL_SCANCODE_KP_4},
    {"kp_5", SDL_SCANCODE_KP_5},
    {"kp_6", SDL_SCANCODE_KP_6},
    {"kp_7", SDL_SCANCODE_KP_7},
    {"kp_8", SDL_SCANCODE_KP_8},
    {"kp_9", SDL_SCANCODE_KP_9},
    {"kp_0", SDL_SCANCODE_KP_0},
    {"kp_period", SDL_SCANCODE_KP_PERIOD},
    {"nonusbackslash", SDL_SCANCODE_NONUSBACKSLASH},
    {"application", SDL_SCANCODE_APPLICATION},
    {"power", SDL_SCANCODE_POWER},
    {"kp_equals", SDL_SCANCODE_KP_EQUALS},
    {"f13", SDL_SCANCODE_F13},
    {"f14", SDL_SCANCODE_F14},
    {"f15", SDL_SCANCODE_F15},
    {"f16", SDL_SCANCODE_F16},
    {"f17", SDL_SCANCODE_F17},
    {"f18", SDL_SCANCODE_F18},
    {"f19", SDL_SCANCODE_F19},
    {"f20", SDL_SCANCODE_F20},
    {"f21", SDL_SCANCODE_F21},
    {"f22", SDL_SCANCODE_F22},
    {"f23", SDL_SCANCODE_F23},
    {"f24", SDL_SCANCODE_F24},
    {"execute", SDL_SCANCODE_EXECUTE},
    {"help", SDL_SCANCODE_HELP},
    {"menu", SDL_SCANCODE_MENU},
    {"select", SDL_SCANCODE_SELECT},
    {"stop", SDL_SCANCODE_STOP},
    {"again", SDL_SCANCODE_AGAIN},
    {"undo", SDL_SCANCODE_UNDO},
    {"cut", SDL_SCANCODE_CUT},
    {"copy", SDL_SCANCODE_COPY},
    {"paste", SDL_SCANCODE_PASTE},
    {"find", SDL_SCANCODE_FIND},
    {"mute", SDL_SCANCODE_MUTE},
    {"volumeup", SDL_SCANCODE_VOLUMEUP},
    {"volumedown", SDL_SCANCODE_VOLUMEDOWN},
    {"kp_comma", SDL_SCANCODE_KP_COMMA},
    {"kp_equalsas400", SDL_SCANCODE_KP_EQUALSAS400},
    {"international1", SDL_SCANCODE_INTERNATIONAL1},
    {"international2", SDL_SCANCODE_INTERNATIONAL2},
    {"international3", SDL_SCANCODE_INTERNATIONAL3},
    {"international4", SDL_SCANCODE_INTERNATIONAL4},
    {"international5", SDL_SCANCODE_INTERNATIONAL5},
    {"international6", SDL_SCANCODE_INTERNATIONAL6},
    {"international7", SDL_SCANCODE_INTERNATIONAL7},
    {"international8", SDL_SCANCODE_INTERNATIONAL8},
    {"international9", SDL_SCANCODE_INTERNATIONAL9},
    {"lang1", SDL_SCANCODE_LANG1},
    {"lang2", SDL_SCANCODE_LANG2},
    {"lang3", SDL_SCANCODE_LANG3},
    {"lang4", SDL_SCANCODE_LANG4},
    {"lang5", SDL_SCANCODE_LANG5},
    {"lang6", SDL_SCANCODE_LANG6},
    {"lang7", SDL_SCANCODE_LANG7},
    {"lang8", SDL_SCANCODE_LANG8},
    {"lang9", SDL_SCANCODE_LANG9},
    {"alterase", SDL_SCANCODE_ALTERASE},
    {"sysreq", SDL_SCANCODE_SYSREQ},
    {"cancel", SDL_SCANCODE_CANCEL},
    {"clear", SDL_SCANCODE_CLEAR},
    {"prior", SDL_SCANCODE_PRIOR},
    {"return2", SDL_SCANCODE_RETURN2},
    {"separator", SDL_SCANCODE_SEPARATOR},
    {"out", SDL_SCANCODE_OUT},
    {"oper", SDL_SCANCODE_OPER},
    {"clearagain", SDL_SCANCODE_CLEARAGAIN},
    {"crsel", SDL_SCANCODE_CRSEL},
    {"exsel", SDL_SCANCODE_EXSEL},
    {"kp_00", SDL_SCANCODE_KP_00},
    {"kp_000", SDL_SCANCODE_KP_000},
    {"thousandsseparator", SDL_SCANCODE_THOUSANDSSEPARATOR},
    {"decimalseparator", SDL_SCANCODE_DECIMALSEPARATOR},
    {"currencyunit", SDL_SCANCODE_CURRENCYUNIT},
    {"currencysubunit", SDL_SCANCODE_CURRENCYSUBUNIT},
    {"kp_leftparen", SDL_SCANCODE_KP_LEFTPAREN},
    {"kp_rightparen", SDL_SCANCODE_KP_RIGHTPAREN},
    {"kp_leftbrace", SDL_SCANCODE_KP_LEFTBRACE},
    {"kp_rightbrace", SDL_SCANCODE_KP_RIGHTBRACE},
    {"kp_tab", SDL_SCANCODE_KP_TAB},
    {"kp_backspace", SDL_SCANCODE_KP_BACKSPACE},
    {"kp_a", SDL_SCANCODE_KP_A},
    {"kp_b", SDL_SCANCODE_KP_B},
    {"kp_c", SDL_SCANCODE_KP_C},
    {"kp_d", SDL_SCANCODE_KP_D},
    {"kp_e", SDL_SCANCODE_KP_E},
    {"kp_f", SDL_SCANCODE_KP_F},
    {"kp_xor", SDL_SCANCODE_KP_XOR},
    {"kp_power", SDL_SCANCODE_KP_POWER},
    {"kp_percent", SDL_SCANCODE_KP_PERCENT},
    {"kp_less", SDL_SCANCODE_KP_LESS},
    {"kp_greater", SDL_SCANCODE_KP_GREATER},
    {"kp_ampersand", SDL_SCANCODE_KP_AMPERSAND},
    {"kp_dblampersand", SDL_SCANCODE_KP_DBLAMPERSAND},
    {"kp_verticalbar", SDL_SCANCODE_KP_VERTICALBAR},
    {"kp_dblverticalbar", SDL_SCANCODE_KP_DBLVERTICALBAR},
    {"kp_colon", SDL_SCANCODE_KP_COLON},
    {"kp_hash", SDL_SCANCODE_KP_HASH},
    {"kp_space", SDL_SCANCODE_KP_SPACE},
    {"kp_at", SDL_SCANCODE_KP_AT},
    {"kp_exclam", SDL_SCANCODE_KP_EXCLAM},
    {"kp_memstore", SDL_SCANCODE_KP_MEMSTORE},
    {"kp_memrecall", SDL_SCANCODE_KP_MEMRECALL},
    {"kp_memclear", SDL_SCANCODE_KP_MEMCLEAR},
    {"kp_memadd", SDL_SCANCODE_KP_MEMADD},
    {"kp_memsubtract", SDL_SCANCODE_KP_MEMSUBTRACT},
    {"kp_memmultiply", SDL_SCANCODE_KP_MEMMULTIPLY},
    {"kp_memdivide", SDL_SCANCODE_KP_MEMDIVIDE},
    {"kp_plusminus", SDL_SCANCODE_KP_PLUSMINUS},
    {"kp_clear", SDL_SCANCODE_KP_CLEAR},
    {"kp_clearentry", SDL_SCANCODE_KP_CLEARENTRY},
    {"kp_binary", SDL_SCANCODE_KP_BINARY},
    {"kp_octal", SDL_SCANCODE_KP_OCTAL},
    {"kp_decimal", SDL_SCANCODE_KP_DECIMAL},
    {"kp_hexadecimal", SDL_SCANCODE_KP_HEXADECIMAL},
    {"lctrl", SDL_SCANCODE_LCTRL},
    {"lshift", SDL_SCANCODE_LSHIFT},
    {"lalt", SDL_SCANCODE_LALT},
    {"lgui", SDL_SCANCODE_LGUI},
    {"rctrl", SDL_SCANCODE_RCTRL},
    {"rshift", SDL_SCANCODE_RSHIFT},
    {"ralt", SDL_SCANCODE_RALT},
    {"rgui", SDL_SCANCODE_RGUI},
    {"mode", SDL_SCANCODE_MODE},
    {"audionext", SDL_SCANCODE_AUDIONEXT},
    {"audioprev", SDL_SCANCODE_AUDIOPREV},
    {"audiostop", SDL_SCANCODE_AUDIOSTOP},
    {"audioplay", SDL_SCANCODE_AUDIOPLAY},
    {"audiomute", SDL_SCANCODE_AUDIOMUTE},
    {"mediaselect", SDL_SCANCODE_MEDIASELECT},
    {"www", SDL_SCANCODE_WWW},
    {"mail", SDL_SCANCODE_MAIL},
    {"calculator", SDL_SCANCODE_CALCULATOR},
    {"computer", SDL_SCANCODE_COMPUTER},
    {"ac_search", SDL_SCANCODE_AC_SEARCH},
    {"ac_home", SDL_SCANCODE_AC_HOME},
    {"ac_back", SDL_SCANCODE_AC_BACK},
    {"ac_forward", SDL_SCANCODE_AC_FORWARD},
    {"ac_stop", SDL_SCANCODE_AC_STOP},
    {"ac_refresh", SDL_SCANCODE_AC_REFRESH},
    {"ac_bookmarks", SDL_SCANCODE_AC_BOOKMARKS},
    {"brightnessdown", SDL_SCANCODE_BRIGHTNESSDOWN},
    {"brightnessup", SDL_SCANCODE_BRIGHTNESSUP},
    {"displayswitch", SDL_SCANCODE_DISPLAYSWITCH},
    {"kbdillumtoggle", SDL_SCANCODE_KBDILLUMTOGGLE},
    {"kbdillumdown", SDL_SCANCODE_KBDILLUMDOWN},
    {"kbdillumup", SDL_SCANCODE_KBDILLUMUP},
    {"eject", SDL_SCANCODE_EJECT},
    {"sleep", SDL_SCANCODE_SLEEP},
    };
};



#endif /* Input_hpp */
